{"ast":null,"code":"import _toConsumableArray from \"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/meliodus-workplace/webshop.github.io/src/App/layout/AdminLayout/NavBar/NavLeft/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dropdown } from 'react-bootstrap';\nimport windowSize from 'react-window-size';\nimport NavSearch from './NavSearch';\nimport Aux from \"../../../../../hoc/_Aux\";\nimport Pages from \"../../../../../store/constant\";\nimport * as actionTypes from \"../../../../../store/actions\";\n\nvar NavLeft = /*#__PURE__*/function (_Component) {\n  _inherits(NavLeft, _Component);\n\n  var _super = _createSuper(NavLeft);\n\n  function NavLeft() {\n    _classCallCheck(this, NavLeft);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NavLeft, [{\n    key: \"render\",\n    value: function render() {\n      var iconFullScreen = ['feather'];\n      iconFullScreen = this.props.isFullScreen ? [].concat(_toConsumableArray(iconFullScreen), ['icon-minimize']) : [].concat(_toConsumableArray(iconFullScreen), ['icon-maximize']);\n      var navItemClass = ['nav-item'];\n\n      if (this.props.windowWidth <= 575) {\n        navItemClass = [].concat(_toConsumableArray(navItemClass), ['d-none']);\n      }\n\n      var dropdownRightAlign = false;\n\n      if (this.props.rtlLayout) {\n        dropdownRightAlign = true;\n      }\n\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-nav mr-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: Pages.BLANK_LINK,\n        className: \"full-screen\",\n        onClick: this.props.onFullScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: iconFullScreen.join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 110\n        }\n      }))), /*#__PURE__*/React.createElement(\"li\", {\n        className: navItemClass.join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        alignRight: dropdownRightAlign,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        variant: 'link',\n        id: \"dropdown-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }, \"Dropdown\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"dropdown-item\",\n        href: Pages.BLANK_LINK,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 41\n        }\n      }, \"Action\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"dropdown-item\",\n        href: Pages.BLANK_LINK,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 41\n        }\n      }, \"Another action\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"dropdown-item\",\n        href: Pages.BLANK_LINK,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 41\n        }\n      }, \"Something else here\")))))), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(NavSearch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 46\n        }\n      }))));\n    }\n  }]);\n\n  return NavLeft;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isFullScreen: state.isFullScreen,\n    rtlLayout: state.rtlLayout\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFullScreen: function onFullScreen() {\n      return dispatch({\n        type: actionTypes.FULL_SCREEN\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(windowSize(NavLeft));","map":{"version":3,"sources":["/home/meliodus-workplace/webshop.github.io/src/App/layout/AdminLayout/NavBar/NavLeft/index.js"],"names":["React","Component","connect","Dropdown","windowSize","NavSearch","Aux","Pages","actionTypes","NavLeft","iconFullScreen","props","isFullScreen","navItemClass","windowWidth","dropdownRightAlign","rtlLayout","BLANK_LINK","onFullScreen","join","mapStateToProps","state","mapDispatchToProps","dispatch","type","FULL_SCREEN"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Dropdown} from 'react-bootstrap';\nimport windowSize from 'react-window-size';\n\nimport NavSearch from './NavSearch';\nimport Aux from \"../../../../../hoc/_Aux\";\nimport Pages from \"../../../../../store/constant\";\nimport * as actionTypes from \"../../../../../store/actions\";\n\nclass NavLeft extends Component {\n\n    render() {\n        let iconFullScreen = ['feather'];\n        iconFullScreen = (this.props.isFullScreen) ? [...iconFullScreen, 'icon-minimize'] : [...iconFullScreen, 'icon-maximize'];\n\n        let navItemClass = ['nav-item'];\n        if (this.props.windowWidth <= 575) {\n            navItemClass = [...navItemClass, 'd-none'];\n        }\n        let dropdownRightAlign = false;\n        if (this.props.rtlLayout) {\n            dropdownRightAlign = true;\n        }\n\n\n        return (\n            <Aux>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li><a href={Pages.BLANK_LINK} className=\"full-screen\" onClick={this.props.onFullScreen}><i className={iconFullScreen.join(' ')} /></a></li>\n                    <li className={navItemClass.join(' ')}>\n                        <Dropdown alignRight={dropdownRightAlign}>\n                            <Dropdown.Toggle variant={'link'} id=\"dropdown-basic\">\n                                Dropdown\n                            </Dropdown.Toggle>\n                            <ul>\n                                <Dropdown.Menu>\n                                    <li><a className=\"dropdown-item\" href={Pages.BLANK_LINK}>Action</a></li>\n                                    <li><a className=\"dropdown-item\" href={Pages.BLANK_LINK}>Another action</a></li>\n                                    <li><a className=\"dropdown-item\" href={Pages.BLANK_LINK}>Something else here</a></li>\n                                </Dropdown.Menu>\n                            </ul>\n                        </Dropdown>\n                    </li>\n                    <li className=\"nav-item\"><NavSearch/></li>\n                </ul>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isFullScreen: state.isFullScreen,\n        rtlLayout: state.rtlLayout\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFullScreen: () => dispatch({type: actionTypes.FULL_SCREEN}),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(windowSize(NavLeft));\n"]},"metadata":{},"sourceType":"module"}