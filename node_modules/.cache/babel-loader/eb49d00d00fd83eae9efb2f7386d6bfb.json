{"ast":null,"code":"import _classCallCheck from\"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Row,Col,Card,Form,InputGroup,Button}from\"react-bootstrap\";import{Map,Marker,GoogleApiWrapper,InfoWindow,Polyline,Polygon}from\"google-maps-react\";import Aux from\"../../../hoc/_Aux\";var polygon=[{lat:21.2105052,lng:72.8653491},{lat:21.2206445,lng:72.8704506},{lat:21.2183091,lng:72.8631228}];var GoogleMap=/*#__PURE__*/function(_React$Component){_inherits(GoogleMap,_React$Component);var _super=_createSuper(GoogleMap);function GoogleMap(){var _this;_classCallCheck(this,GoogleMap);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeMarker:{},selectedPlace:{},showingInfoWindow:false,position:null};_this.onMarkerClick=function(props,marker){return _this.setState({activeMarker:marker,selectedPlace:props,showingInfoWindow:true});};_this.onInfoWindowClose=function(){return _this.setState({activeMarker:null,showingInfoWindow:false});};_this.onMapClicked=function(){if(_this.state.showingInfoWindow)_this.setState({activeMarker:null,showingInfoWindow:false});};return _this;}_createClass(GoogleMap,[{key:\"componentDidMount\",value:function componentDidMount(){this.renderAutoComplete();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props!==prevProps.map)this.renderAutoComplete();}},{key:\"onSubmit\",value:function onSubmit(e){e.preventDefault();}},{key:\"renderAutoComplete\",value:function renderAutoComplete(){var _this2=this;var _this$props=this.props,google=_this$props.google,map=_this$props.map;if(!google||!map)return;var autocomplete=new google.maps.places.Autocomplete(this.autocomplete);autocomplete.bindTo(\"bounds\",map);autocomplete.addListener(\"place_changed\",function(){var place=autocomplete.getPlace();if(!place.geometry)return;if(place.geometry.viewport)map.fitBounds(place.geometry.viewport);else{map.setCenter(place.geometry.location);map.setZoom(17);}_this2.setState({position:place.geometry.location});});}},{key:\"render\",value:function render(){var position=this.state.position;// xl={6}\nreturn/*#__PURE__*/React.createElement(Aux,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{as:\"h5\"},\"Domain Locations\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:\"300px\",width:\"100%\"}},/*#__PURE__*/React.createElement(Map,{centerAroundCurrentLocation:true,className:\"map\",google:this.props.google,onClick:this.onMapClicked,zoom:12},/*#__PURE__*/React.createElement(Marker,{name:\"Codedthemes\",position:{lat:21.2335163,lng:72.8643298},onClick:this.onMarkerClick}),/*#__PURE__*/React.createElement(Marker,{name:\"Roman Point\",position:{lat:21.2148165,lng:72.8627243},onClick:this.onMarkerClick}),/*#__PURE__*/React.createElement(Marker,{name:\"Current Location\",onClick:this.onMarkerClick}),/*#__PURE__*/React.createElement(InfoWindow,{marker:this.state.activeMarker,onClose:this.onInfoWindowClose,visible:this.state.showingInfoWindow},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,this.state.selectedPlace.name))))))))));}}]);return GoogleMap;}(React.Component);export default GoogleApiWrapper({apiKey:\"AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk\"})(GoogleMap);","map":{"version":3,"sources":["/home/meliodus-workplace/webshop.github.io/src/Pages/Maps/GoogleMap/index.js"],"names":["React","Row","Col","Card","Form","InputGroup","Button","Map","Marker","GoogleApiWrapper","InfoWindow","Polyline","Polygon","Aux","polygon","lat","lng","GoogleMap","state","activeMarker","selectedPlace","showingInfoWindow","position","onMarkerClick","props","marker","setState","onInfoWindowClose","onMapClicked","renderAutoComplete","prevProps","map","e","preventDefault","google","autocomplete","maps","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","height","width","name","Component","apiKey"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col, Card, Form, InputGroup, Button } from \"react-bootstrap\";\nimport {\n  Map,\n  Marker,\n  GoogleApiWrapper,\n  InfoWindow,\n  Polyline,\n  Polygon,\n} from \"google-maps-react\";\n\nimport Aux from \"../../../hoc/_Aux\";\n\nconst polygon = [\n  { lat: 21.2105052, lng: 72.8653491 },\n  { lat: 21.2206445, lng: 72.8704506 },\n  { lat: 21.2183091, lng: 72.8631228 },\n];\n\nclass GoogleMap extends React.Component {\n  state = {\n    activeMarker: {},\n    selectedPlace: {},\n    showingInfoWindow: false,\n    position: null,\n  };\n\n  onMarkerClick = (props, marker) =>\n    this.setState({\n      activeMarker: marker,\n      selectedPlace: props,\n      showingInfoWindow: true,\n    });\n\n  onInfoWindowClose = () =>\n    this.setState({\n      activeMarker: null,\n      showingInfoWindow: false,\n    });\n\n  onMapClicked = () => {\n    if (this.state.showingInfoWindow)\n      this.setState({\n        activeMarker: null,\n        showingInfoWindow: false,\n      });\n  };\n\n  componentDidMount() {\n    this.renderAutoComplete();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps.map) this.renderAutoComplete();\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n  }\n\n  renderAutoComplete() {\n    const { google, map } = this.props;\n\n    if (!google || !map) return;\n\n    const autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\n    autocomplete.bindTo(\"bounds\", map);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      const place = autocomplete.getPlace();\n\n      if (!place.geometry) return;\n\n      if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);\n      else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(17);\n      }\n\n      this.setState({ position: place.geometry.location });\n    });\n  }\n\n  render() {\n    const { position } = this.state;\n    // xl={6}\n    return (\n      <Aux>\n        <Row>\n          <Col>\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h5\">Domain Locations</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <div style={{ height: \"300px\", width: \"100%\" }}>\n                  <Map\n                    centerAroundCurrentLocation\n                    className=\"map\"\n                    google={this.props.google}\n                    onClick={this.onMapClicked}\n                    zoom={12}\n                  >\n                    <Marker\n                      name=\"Codedthemes\"\n                      position={{ lat: 21.2335163, lng: 72.8643298 }}\n                      onClick={this.onMarkerClick}\n                    />\n\n                    <Marker\n                      name=\"Roman Point\"\n                      position={{ lat: 21.2148165, lng: 72.8627243 }}\n                      onClick={this.onMarkerClick}\n                    />\n\n                    <Marker\n                      name=\"Current Location\"\n                      onClick={this.onMarkerClick}\n                    />\n\n                    <InfoWindow\n                      marker={this.state.activeMarker}\n                      onClose={this.onInfoWindowClose}\n                      visible={this.state.showingInfoWindow}\n                    >\n                      <div>\n                        <h3>{this.state.selectedPlace.name}</h3>\n                      </div>\n                    </InfoWindow>\n                  </Map>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Aux>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk\",\n})(GoogleMap);\n"]},"metadata":{},"sourceType":"module"}