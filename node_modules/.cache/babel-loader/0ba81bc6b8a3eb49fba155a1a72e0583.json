{"ast":null,"code":"import _toConsumableArray from\"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from'./actions';import config from'./../config';var initialState=_objectSpread(_objectSpread({isOpen:[],//for active default menu\nisTrigger:[]},config),{},{isFullScreen:false// static can't change\n});var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var trigger=[];var open=[];switch(action.type){case actionTypes.COLLAPSE_MENU:return _objectSpread(_objectSpread({},state),{},{collapseMenu:!state.collapseMenu});case actionTypes.COLLAPSE_TOGGLE:if(action.menu.type==='sub'){open=state.isOpen;trigger=state.isTrigger;var triggerIndex=trigger.indexOf(action.menu.id);if(triggerIndex>-1){open=open.filter(function(item){return item!==action.menu.id;});trigger=trigger.filter(function(item){return item!==action.menu.id;});}if(triggerIndex===-1){open=[].concat(_toConsumableArray(open),[action.menu.id]);trigger=[].concat(_toConsumableArray(trigger),[action.menu.id]);}}else{open=state.isOpen;var _triggerIndex=state.isTrigger.indexOf(action.menu.id);trigger=_triggerIndex===-1?[action.menu.id]:[];open=_triggerIndex===-1?[action.menu.id]:[];}return _objectSpread(_objectSpread({},state),{},{isOpen:open,isTrigger:trigger});case actionTypes.NAV_CONTENT_LEAVE:return _objectSpread(_objectSpread({},state),{},{isOpen:open,isTrigger:trigger});case actionTypes.NAV_COLLAPSE_LEAVE:if(action.menu.type==='sub'){open=state.isOpen;trigger=state.isTrigger;var _triggerIndex2=trigger.indexOf(action.menu.id);if(_triggerIndex2>-1){open=open.filter(function(item){return item!==action.menu.id;});trigger=trigger.filter(function(item){return item!==action.menu.id;});}return _objectSpread(_objectSpread({},state),{},{isOpen:open,isTrigger:trigger});}return _objectSpread({},state);case actionTypes.FULL_SCREEN:return _objectSpread(_objectSpread({},state),{},{isFullScreen:!state.isFullScreen});case actionTypes.FULL_SCREEN_EXIT:return _objectSpread(_objectSpread({},state),{},{isFullScreen:false});case actionTypes.CHANGE_LAYOUT:return _objectSpread(_objectSpread({},state),{},{layout:action.layout});default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/meliodus-workplace/webshop.github.io/src/store/reducer.js"],"names":["actionTypes","config","initialState","isOpen","isTrigger","isFullScreen","reducer","state","action","trigger","open","type","COLLAPSE_MENU","collapseMenu","COLLAPSE_TOGGLE","menu","triggerIndex","indexOf","id","filter","item","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","layout"],"mappings":"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","sourcesContent":["import * as actionTypes from './actions';\nimport config from './../config';\n\nconst initialState = {\n    isOpen: [], //for active default menu\n    isTrigger: [], //for active default menu, set blank for horizontal\n    ...config,\n    isFullScreen: false, // static can't change\n};\n\nconst reducer = (state = initialState, action) => {\n    let trigger = [];\n    let open = [];\n\n    switch (action.type) {\n        case actionTypes.COLLAPSE_MENU:\n            return {\n                ...state,\n                collapseMenu: !state.collapseMenu\n            };\n        case actionTypes.COLLAPSE_TOGGLE:\n            if (action.menu.type === 'sub') {\n                open = state.isOpen;\n                trigger = state.isTrigger;\n\n                const triggerIndex = trigger.indexOf(action.menu.id);\n                if (triggerIndex > -1) {\n                    open = open.filter(item => item !== action.menu.id);\n                    trigger = trigger.filter(item => item !== action.menu.id);\n                }\n\n                if (triggerIndex === -1) {\n                    open = [...open, action.menu.id];\n                    trigger = [...trigger, action.menu.id];\n                }\n            } else {\n                open = state.isOpen;\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\n            }\n\n            return {\n                ...state,\n                isOpen: open,\n                isTrigger: trigger\n            };\n        case actionTypes.NAV_CONTENT_LEAVE:\n            return {\n                ...state,\n                isOpen: open,\n                isTrigger: trigger,\n            };\n        case actionTypes.NAV_COLLAPSE_LEAVE:\n            if (action.menu.type === 'sub') {\n                open = state.isOpen;\n                trigger = state.isTrigger;\n\n                const triggerIndex = trigger.indexOf(action.menu.id);\n                if (triggerIndex > -1) {\n                    open = open.filter(item => item !== action.menu.id);\n                    trigger = trigger.filter(item => item !== action.menu.id);\n                }\n                return {\n                    ...state,\n                    isOpen: open,\n                    isTrigger: trigger,\n                };\n            }\n            return {...state};\n        case actionTypes.FULL_SCREEN :\n            return {\n                ...state,\n                isFullScreen: !state.isFullScreen\n            };\n        case actionTypes.FULL_SCREEN_EXIT:\n            return {\n                ...state,\n                isFullScreen: false\n            };\n        case actionTypes.CHANGE_LAYOUT:\n            return {\n                ...state,\n                layout: action.layout\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}