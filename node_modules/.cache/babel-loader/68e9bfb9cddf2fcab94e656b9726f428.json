{"ast":null,"code":"import _classCallCheck from\"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/meliodus-workplace/webshop.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import friend from'./friends';import Friend from'./Friend';import Chat from'./Chat';import Aux from\"../../../../../../../hoc/_Aux\";var Friends=/*#__PURE__*/function(_Component){_inherits(Friends,_Component);var _super=_createSuper(Friends);function Friends(){var _this;_classCallCheck(this,Friends);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={chatOpen:false,user:[]};_this.componentWillReceiveProps=function(nextProps){if(!nextProps.listOpen){_this.setState({chatOpen:false,user:[]});}};return _this;}_createClass(Friends,[{key:\"render\",value:function render(){var _this2=this;var friendList=friend.map(function(f){return/*#__PURE__*/React.createElement(Friend,{key:f.id,data:f,activeId:_this2.state.user.id,clicked:function clicked(){return _this2.setState({chatOpen:true,user:f});}});});return/*#__PURE__*/React.createElement(Aux,null,friendList,/*#__PURE__*/React.createElement(Chat,{user:this.state.user,chatOpen:this.state.chatOpen,listOpen:this.props.listOpen,closed:function closed(){return _this2.setState({chatOpen:false,user:[]});}}));}}]);return Friends;}(Component);export default Friends;","map":{"version":3,"sources":["/home/meliodus-workplace/webshop.github.io/src/App/layout/AdminLayout/NavBar/NavRight/ChatList/Friends/index.js"],"names":["React","Component","friend","Friend","Chat","Aux","Friends","state","chatOpen","user","componentWillReceiveProps","nextProps","listOpen","setState","friendList","map","f","id","props"],"mappings":"onBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,+BAAhB,C,GAEMC,CAAAA,O,+TACFC,K,CAAQ,CACJC,QAAQ,CAAE,KADN,CAEJC,IAAI,CAAE,EAFF,C,OAKRC,yB,CAA4B,SAACC,SAAD,CAAe,CACvC,GAAI,CAACA,SAAS,CAACC,QAAf,CAAyB,CACrB,MAAKC,QAAL,CAAc,CAACL,QAAQ,CAAE,KAAX,CAAkBC,IAAI,CAAE,EAAxB,CAAd,EACH,CACJ,C,0EAEQ,iBACL,GAAMK,CAAAA,UAAU,CAAIZ,MAAD,CAASa,GAAT,CAAa,SAAAC,CAAC,CAAI,CACjC,mBAAO,oBAAC,MAAD,EAAQ,GAAG,CAAEA,CAAC,CAACC,EAAf,CAAmB,IAAI,CAAED,CAAzB,CAA4B,QAAQ,CAAE,MAAI,CAACT,KAAL,CAAWE,IAAX,CAAgBQ,EAAtD,CAA0D,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACJ,QAAL,CAAc,CAACL,QAAQ,CAAE,IAAX,CAAiBC,IAAI,CAAEO,CAAvB,CAAd,CAAN,EAAnE,EAAP,CACH,CAFkB,CAAnB,CAGA,mBACI,oBAAC,GAAD,MACKF,UADL,cAEI,oBAAC,IAAD,EAAM,IAAI,CAAE,KAAKP,KAAL,CAAWE,IAAvB,CAA6B,QAAQ,CAAE,KAAKF,KAAL,CAAWC,QAAlD,CAA4D,QAAQ,CAAE,KAAKU,KAAL,CAAWN,QAAjF,CAA2F,MAAM,CAAE,wBAAM,CAAA,MAAI,CAACC,QAAL,CAAc,CAACL,QAAQ,CAAE,KAAX,CAAkBC,IAAI,CAAE,EAAxB,CAAd,CAAN,EAAnG,EAFJ,CADJ,CAMH,C,qBAtBiBR,S,EAyBtB,cAAeK,CAAAA,OAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport friend from './friends';\nimport Friend from './Friend';\nimport Chat from './Chat';\nimport Aux from \"../../../../../../../hoc/_Aux\";\n\nclass Friends extends Component {\n    state = {\n        chatOpen: false,\n        user: []\n    };\n\n    componentWillReceiveProps = (nextProps) => {\n        if (!nextProps.listOpen) {\n            this.setState({chatOpen: false, user: []});\n        }\n    };\n\n    render() {\n        const friendList = (friend).map(f => {\n            return <Friend key={f.id} data={f} activeId={this.state.user.id} clicked={() => this.setState({chatOpen: true, user: f})} />;\n        });\n        return (\n            <Aux>\n                {friendList}\n                <Chat user={this.state.user} chatOpen={this.state.chatOpen} listOpen={this.props.listOpen} closed={() => this.setState({chatOpen: false, user: []})}/>\n            </Aux>\n        );\n    }\n}\n\nexport default Friends;\n"]},"metadata":{},"sourceType":"module"}