{"ast":null,"code":"import _classCallCheck from\"/Users/riley/wbdeploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/riley/wbdeploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/riley/wbdeploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/riley/wbdeploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Card,Form,InputGroup,Button}from'react-bootstrap';import{Map,Marker,GoogleApiWrapper,InfoWindow,Polyline,Polygon}from'google-maps-react';import Aux from\"../../../hoc/_Aux\";var polygon=[{lat:21.2105052,lng:72.8653491},{lat:21.2206445,lng:72.8704506},{lat:21.2183091,lng:72.8631228}];var GoogleMap=/*#__PURE__*/function(_React$Component){_inherits(GoogleMap,_React$Component);var _super=_createSuper(GoogleMap);function GoogleMap(){var _this;_classCallCheck(this,GoogleMap);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeMarker:{},selectedPlace:{},showingInfoWindow:false,position:null};_this.onMarkerClick=function(props,marker){return _this.setState({activeMarker:marker,selectedPlace:props,showingInfoWindow:true});};_this.onInfoWindowClose=function(){return _this.setState({activeMarker:null,showingInfoWindow:false});};_this.onMapClicked=function(){if(_this.state.showingInfoWindow)_this.setState({activeMarker:null,showingInfoWindow:false});};return _this;}_createClass(GoogleMap,[{key:\"componentDidMount\",value:function componentDidMount(){this.renderAutoComplete();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props!==prevProps.map)this.renderAutoComplete();}},{key:\"onSubmit\",value:function onSubmit(e){e.preventDefault();}},{key:\"renderAutoComplete\",value:function renderAutoComplete(){var _this2=this;var _this$props=this.props,google=_this$props.google,map=_this$props.map;if(!google||!map)return;var autocomplete=new google.maps.places.Autocomplete(this.autocomplete);autocomplete.bindTo('bounds',map);autocomplete.addListener('place_changed',function(){var place=autocomplete.getPlace();if(!place.geometry)return;if(place.geometry.viewport)map.fitBounds(place.geometry.viewport);else{map.setCenter(place.geometry.location);map.setZoom(17);}_this2.setState({position:place.geometry.location});});}},{key:\"render\",value:function render(){var _this3=this;var position=this.state.position;return/*#__PURE__*/React.createElement(Aux,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{as:\"h5\"},\"Basic\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:'300px',width:'100%'}},/*#__PURE__*/React.createElement(Map,{centerAroundCurrentLocation:true,className:\"map\",google:this.props.google,zoom:14}))))),/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{as:\"h5\"},\"Simple Markers\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:'300px',width:'100%'}},/*#__PURE__*/React.createElement(Map,{centerAroundCurrentLocation:true,google:this.props.google,className:\"map\",zoom:13},/*#__PURE__*/React.createElement(Marker,{name:\"Codedthemes\",position:{lat:21.2335163,lng:72.8643298}}),/*#__PURE__*/React.createElement(Marker,{name:\"Roman Point\",position:{lat:21.2148165,lng:72.8627243}}),/*#__PURE__*/React.createElement(Marker,null)))))),/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{as:\"h5\"},\"Click-Able Markers\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:'300px',width:'100%'}},/*#__PURE__*/React.createElement(Map,{centerAroundCurrentLocation:true,className:\"map\",google:this.props.google,onClick:this.onMapClicked,zoom:12},/*#__PURE__*/React.createElement(Marker,{name:\"Codedthemes\",position:{lat:21.2335163,lng:72.8643298},onClick:this.onMarkerClick}),/*#__PURE__*/React.createElement(Marker,{name:\"Roman Point\",position:{lat:21.2148165,lng:72.8627243},onClick:this.onMarkerClick}),/*#__PURE__*/React.createElement(Marker,{name:\"Current Location\",onClick:this.onMarkerClick}),/*#__PURE__*/React.createElement(InfoWindow,{marker:this.state.activeMarker,onClose:this.onInfoWindowClose,visible:this.state.showingInfoWindow},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,this.state.selectedPlace.name)))))))),/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{as:\"h5\"},\"Geo-Coding\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Form,{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Control,{ref:function ref(_ref){return _this3.autocomplete=_ref;},type:\"text\",placeholder:\"Search your favorite place\"}),/*#__PURE__*/React.createElement(InputGroup.Append,null,/*#__PURE__*/React.createElement(Button,{type:\"submit\"},\"Search\")))),/*#__PURE__*/React.createElement(\"div\",{style:{height:'240px',width:'100%'}},/*#__PURE__*/React.createElement(Map,Object.assign({className:\"map\"},this.props,{center:position,centerAroundCurrentLocation:true}),/*#__PURE__*/React.createElement(Marker,{position:position})))))),/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{as:\"h5\"},\"Polygon\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:'300px',width:'100%'}},/*#__PURE__*/React.createElement(Map,{centerAroundCurrentLocation:true,google:this.props.google,className:\"map\",zoom:14},/*#__PURE__*/React.createElement(Polygon,{fillColor:\"#dc3545\",fillOpacity:0.35,paths:[polygon],strokeColor:\"#dc3545\",strokeOpacity:0.8,strokeWeight:2})))))),/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{as:\"h5\"},\"Polyline\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{height:'300px',width:'100%'}},/*#__PURE__*/React.createElement(Map,{centerAroundCurrentLocation:true,google:this.props.google,className:\"map\",zoom:14},/*#__PURE__*/React.createElement(Polyline,{fillColor:\"#dc3545\",fillOpacity:0.35,path:polygon,strokeColor:\"#dc3545\",strokeOpacity:0.8,strokeWeight:5}))))))));}}]);return GoogleMap;}(React.Component);export default GoogleApiWrapper({apiKey:'AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk'})(GoogleMap);","map":{"version":3,"sources":["/Users/riley/wbdeploy/src/Pages/Maps/GoogleMap/index.js"],"names":["React","Row","Col","Card","Form","InputGroup","Button","Map","Marker","GoogleApiWrapper","InfoWindow","Polyline","Polygon","Aux","polygon","lat","lng","GoogleMap","state","activeMarker","selectedPlace","showingInfoWindow","position","onMarkerClick","props","marker","setState","onInfoWindowClose","onMapClicked","renderAutoComplete","prevProps","map","e","preventDefault","google","autocomplete","maps","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","height","width","name","onSubmit","ref","Component","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Row, Col, Card, Form, InputGroup, Button} from 'react-bootstrap';\r\nimport {Map, Marker, GoogleApiWrapper, InfoWindow, Polyline, Polygon}  from 'google-maps-react';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nconst polygon = [\r\n    { lat: 21.2105052, lng: 72.8653491 },\r\n    { lat: 21.2206445, lng: 72.8704506 },\r\n    { lat: 21.2183091, lng: 72.8631228 }\r\n];\r\n\r\nclass GoogleMap extends React.Component {\r\n\r\n    state = {\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        showingInfoWindow: false,\r\n        position: null\r\n    };\r\n\r\n    onMarkerClick = (props, marker) =>\r\n        this.setState({\r\n            activeMarker: marker,\r\n            selectedPlace: props,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    onInfoWindowClose = () =>\r\n        this.setState({\r\n            activeMarker: null,\r\n            showingInfoWindow: false\r\n        });\r\n\r\n    onMapClicked = () => {\r\n        if (this.state.showingInfoWindow)\r\n            this.setState({\r\n                activeMarker: null,\r\n                showingInfoWindow: false\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.renderAutoComplete();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps.map) this.renderAutoComplete();\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    renderAutoComplete() {\r\n        const { google, map } = this.props;\r\n\r\n        if (!google || !map) return;\r\n\r\n        const autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\r\n        autocomplete.bindTo('bounds', map);\r\n\r\n        autocomplete.addListener('place_changed', () => {\r\n            const place = autocomplete.getPlace();\r\n\r\n            if (!place.geometry) return;\r\n\r\n            if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);\r\n            else {\r\n                map.setCenter(place.geometry.location);\r\n                map.setZoom(17);\r\n            }\r\n\r\n            this.setState({ position: place.geometry.location });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { position } = this.state;\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Basic</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        className=\"map\"\r\n                                        google={this.props.google}\r\n                                        zoom={14}\r\n                                    />\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Simple Markers</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={13}>\r\n                                        <Marker\r\n                                            name=\"Codedthemes\"\r\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\r\n                                        />\r\n\r\n                                        <Marker\r\n                                            name=\"Roman Point\"\r\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\r\n                                        />\r\n\r\n                                        <Marker />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Click-Able Markers</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        className=\"map\"\r\n                                        google={this.props.google}\r\n                                        onClick={this.onMapClicked}\r\n                                        zoom={12}>\r\n\r\n                                        <Marker\r\n                                            name=\"Codedthemes\"\r\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\r\n                                            onClick={this.onMarkerClick}\r\n                                        />\r\n\r\n                                        <Marker\r\n                                            name=\"Roman Point\"\r\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\r\n                                            onClick={this.onMarkerClick}\r\n                                        />\r\n\r\n                                        <Marker name=\"Current Location\" onClick={this.onMarkerClick} />\r\n\r\n                                        <InfoWindow\r\n                                            marker={this.state.activeMarker}\r\n                                            onClose={this.onInfoWindowClose}\r\n                                            visible={this.state.showingInfoWindow}>\r\n                                            <div>\r\n                                                <h3>{this.state.selectedPlace.name}</h3>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Geo-Coding</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Form onSubmit={this.onSubmit}>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <Form.Control ref={ref => (this.autocomplete = ref)} type='text' placeholder='Search your favorite place' />\r\n                                        <InputGroup.Append>\r\n                                            <Button type=\"submit\">Search</Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n                                </Form>\r\n                                <div style={{height: '240px', width: '100%'}}>\r\n                                    <Map\r\n                                        className='map'\r\n                                        {...this.props}\r\n                                        center={position}\r\n                                        centerAroundCurrentLocation >\r\n                                        <Marker position={position} />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Polygon</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={14}>\r\n                                        <Polygon\r\n                                            fillColor=\"#dc3545\"\r\n                                            fillOpacity={0.35}\r\n                                            paths={[polygon]}\r\n                                            strokeColor=\"#dc3545\"\r\n                                            strokeOpacity={0.8}\r\n                                            strokeWeight={2}\r\n                                        />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Polyline</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={14}>\r\n                                        <Polyline\r\n                                            fillColor=\"#dc3545\"\r\n                                            fillOpacity={0.35}\r\n                                            path={polygon}\r\n                                            strokeColor=\"#dc3545\"\r\n                                            strokeOpacity={0.8}\r\n                                            strokeWeight={5}\r\n                                        />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk'\r\n})(GoogleMap);"]},"metadata":{},"sourceType":"module"}