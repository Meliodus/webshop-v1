{"ast":null,"code":"import _classCallCheck from \"/Users/riley/wbdeploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/riley/wbdeploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/riley/wbdeploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/riley/wbdeploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/riley/wbdeploy/src/Pages/Maps/GoogleMap/index.js\";\nimport React from \"react\";\nimport { Row, Col, Card, Form, InputGroup, Button } from \"react-bootstrap\";\nimport { Map, Marker, GoogleApiWrapper, InfoWindow, Polyline, Polygon } from \"google-maps-react\";\nimport Aux from \"../../../hoc/_Aux\";\nvar polygon = [{\n  lat: 21.2105052,\n  lng: 72.8653491\n}, {\n  lat: 21.2206445,\n  lng: 72.8704506\n}, {\n  lat: 21.2183091,\n  lng: 72.8631228\n}];\n\nvar GoogleMap = /*#__PURE__*/function (_React$Component) {\n  _inherits(GoogleMap, _React$Component);\n\n  var _super = _createSuper(GoogleMap);\n\n  function GoogleMap() {\n    var _this;\n\n    _classCallCheck(this, GoogleMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      activeMarker: {},\n      selectedPlace: {},\n      showingInfoWindow: false,\n      position: null\n    };\n\n    _this.onMarkerClick = function (props, marker) {\n      return _this.setState({\n        activeMarker: marker,\n        selectedPlace: props,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onInfoWindowClose = function () {\n      return _this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n    };\n\n    _this.onMapClicked = function () {\n      if (_this.state.showingInfoWindow) _this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderAutoComplete();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props !== prevProps.map) this.renderAutoComplete();\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: \"renderAutoComplete\",\n    value: function renderAutoComplete() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          google = _this$props.google,\n          map = _this$props.map;\n      if (!google || !map) return;\n      var autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\n      autocomplete.bindTo(\"bounds\", map);\n      autocomplete.addListener(\"place_changed\", function () {\n        var place = autocomplete.getPlace();\n        if (!place.geometry) return;\n        if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);else {\n          map.setCenter(place.geometry.location);\n          map.setZoom(17);\n        }\n\n        _this2.setState({\n          position: place.geometry.location\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var position = this.state.position; // xl={6}\n\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, \"Domain Locations\")), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"300px\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Map, {\n        centerAroundCurrentLocation: true,\n        className: \"map\",\n        google: this.props.google,\n        onClick: this.onMapClicked,\n        zoom: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Marker, {\n        name: \"Codedthemes\",\n        position: {\n          lat: 21.2335163,\n          lng: 72.8643298\n        },\n        onClick: this.onMarkerClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Marker, {\n        name: \"Roman Point\",\n        position: {\n          lat: 21.2148165,\n          lng: 72.8627243\n        },\n        onClick: this.onMarkerClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Marker, {\n        name: \"Current Location\",\n        onClick: this.onMarkerClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        onClose: this.onInfoWindowClose,\n        visible: this.state.showingInfoWindow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, this.state.selectedPlace.name))))))))));\n    }\n  }]);\n\n  return GoogleMap;\n}(React.Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk\"\n})(GoogleMap);","map":{"version":3,"sources":["/Users/riley/wbdeploy/src/Pages/Maps/GoogleMap/index.js"],"names":["React","Row","Col","Card","Form","InputGroup","Button","Map","Marker","GoogleApiWrapper","InfoWindow","Polyline","Polygon","Aux","polygon","lat","lng","GoogleMap","state","activeMarker","selectedPlace","showingInfoWindow","position","onMarkerClick","props","marker","setState","onInfoWindowClose","onMapClicked","renderAutoComplete","prevProps","map","e","preventDefault","google","autocomplete","maps","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","height","width","name","Component","apiKey"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Card, Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport {\r\n  Map,\r\n  Marker,\r\n  GoogleApiWrapper,\r\n  InfoWindow,\r\n  Polyline,\r\n  Polygon,\r\n} from \"google-maps-react\";\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nconst polygon = [\r\n  { lat: 21.2105052, lng: 72.8653491 },\r\n  { lat: 21.2206445, lng: 72.8704506 },\r\n  { lat: 21.2183091, lng: 72.8631228 },\r\n];\r\n\r\nclass GoogleMap extends React.Component {\r\n  state = {\r\n    activeMarker: {},\r\n    selectedPlace: {},\r\n    showingInfoWindow: false,\r\n    position: null,\r\n  };\r\n\r\n  onMarkerClick = (props, marker) =>\r\n    this.setState({\r\n      activeMarker: marker,\r\n      selectedPlace: props,\r\n      showingInfoWindow: true,\r\n    });\r\n\r\n  onInfoWindowClose = () =>\r\n    this.setState({\r\n      activeMarker: null,\r\n      showingInfoWindow: false,\r\n    });\r\n\r\n  onMapClicked = () => {\r\n    if (this.state.showingInfoWindow)\r\n      this.setState({\r\n        activeMarker: null,\r\n        showingInfoWindow: false,\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.renderAutoComplete();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps.map) this.renderAutoComplete();\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  renderAutoComplete() {\r\n    const { google, map } = this.props;\r\n\r\n    if (!google || !map) return;\r\n\r\n    const autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\r\n    autocomplete.bindTo(\"bounds\", map);\r\n\r\n    autocomplete.addListener(\"place_changed\", () => {\r\n      const place = autocomplete.getPlace();\r\n\r\n      if (!place.geometry) return;\r\n\r\n      if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);\r\n      else {\r\n        map.setCenter(place.geometry.location);\r\n        map.setZoom(17);\r\n      }\r\n\r\n      this.setState({ position: place.geometry.location });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { position } = this.state;\r\n    // xl={6}\r\n    return (\r\n      <Aux>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <Card.Header>\r\n                <Card.Title as=\"h5\">Domain Locations</Card.Title>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <div style={{ height: \"300px\", width: \"100%\" }}>\r\n                  <Map\r\n                    centerAroundCurrentLocation\r\n                    className=\"map\"\r\n                    google={this.props.google}\r\n                    onClick={this.onMapClicked}\r\n                    zoom={12}\r\n                  >\r\n                    <Marker\r\n                      name=\"Codedthemes\"\r\n                      position={{ lat: 21.2335163, lng: 72.8643298 }}\r\n                      onClick={this.onMarkerClick}\r\n                    />\r\n\r\n                    <Marker\r\n                      name=\"Roman Point\"\r\n                      position={{ lat: 21.2148165, lng: 72.8627243 }}\r\n                      onClick={this.onMarkerClick}\r\n                    />\r\n\r\n                    <Marker\r\n                      name=\"Current Location\"\r\n                      onClick={this.onMarkerClick}\r\n                    />\r\n\r\n                    <InfoWindow\r\n                      marker={this.state.activeMarker}\r\n                      onClose={this.onInfoWindowClose}\r\n                      visible={this.state.showingInfoWindow}\r\n                    >\r\n                      <div>\r\n                        <h3>{this.state.selectedPlace.name}</h3>\r\n                      </div>\r\n                    </InfoWindow>\r\n                  </Map>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk\",\r\n})(GoogleMap);\r\n"]},"metadata":{},"sourceType":"module"}